{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","addRow","removeRow","addColumn","removeColumn","maxLength","minLength","addEventListener","e","rowCount","rows","length","cellCount","cells","row","insertRow","i","insertCell","setAttribute","removeAttribute","deleteRow","rowArray","children","after","cloneNode","remove"],"mappings":";AAAA,aAsDA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApDA,IAAMA,EAAQC,SAASC,cAAc,UAC/BC,EAASF,SAASC,cAAc,eAChCE,EAAYH,SAASC,cAAc,eACnCG,EAAYJ,SAASC,cAAc,kBACnCI,EAAeL,SAASC,cAAc,kBAEtCK,EAAY,GACZC,EAAY,EAElBL,EAAOM,iBAAiB,QAAS,SAACC,GAK3B,IAJCC,IAAAA,EAAWX,EAAMY,KAAKC,OACtBC,EAAYd,EAAMY,KAAK,GAAGG,MAAMF,OAChCG,EAAMhB,EAAMiB,UAAUN,GAEnBO,EAAI,EAAGA,EAAIJ,EAAWI,IAC7BF,EAAIG,WAAWD,GAGblB,EAAMY,KAAKC,QAAUN,GACvBJ,EAAOiB,aAAa,WAAY,QAGlChB,EAAUiB,gBAAgB,cAG5BjB,EAAUK,iBAAiB,QAAS,SAACC,GAC7BC,IAAAA,EAAWX,EAAMY,KAAKC,OAE5Bb,EAAMsB,UAAUX,EAAW,GAEvBX,EAAMY,KAAKC,QAAUL,GACvBJ,EAAUgB,aAAa,WAAY,QAGrCjB,EAAOkB,gBAAgB,cAGzBhB,EAAUI,iBAAiB,QAAS,SAACC,GAC7Ba,IADmC,EACnCA,EAAevB,EAAAA,EAAMY,MACrBE,EAAYd,EAAMY,KAAK,GAAGG,MAAMF,OAEpBU,EAAAA,EAAAA,GAJuB,IAIb,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBP,IAAAA,EAAiB,EAAA,MAC1BA,EAAIQ,SAASV,EAAY,GAAGW,MAAMT,EAAIQ,SAAS,GAAGE,WAAU,KALrB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAQrC1B,EAAMY,KAAK,GAAGG,MAAMF,QAAUN,GAChCF,EAAUe,aAAa,WAAY,QAGrCd,EAAae,gBAAgB,cAG/Bf,EAAaG,iBAAiB,QAAS,SAACC,GAChCa,IADsC,EACtCA,EAAevB,EAAAA,EAAMY,MACrBE,EAAYd,EAAMY,KAAK,GAAGG,MAAMF,OAEpBU,EAAAA,EAAAA,GAJ0B,IAIhB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MACtBC,SAASV,EAAY,GAAGa,UALc,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAQxC3B,EAAMY,KAAK,GAAGG,MAAMF,QAAUL,GAChCF,EAAac,aAAa,WAAY,QAGxCf,EAAUgB,gBAAgB","file":"main.5575f642.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('.field');\nconst addRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst addColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nconst maxLength = 10;\nconst minLength = 2;\n\naddRow.addEventListener('click', (e) => {\n  const rowCount = table.rows.length;\n  const cellCount = table.rows[0].cells.length;\n  const row = table.insertRow(rowCount);\n\n  for (let i = 0; i < cellCount; i++) {\n    row.insertCell(i);\n  }\n\n  if (table.rows.length >= maxLength) {\n    addRow.setAttribute('disabled', 'true');\n  }\n\n  removeRow.removeAttribute('disabled');\n});\n\nremoveRow.addEventListener('click', (e) => {\n  const rowCount = table.rows.length;\n\n  table.deleteRow(rowCount - 1);\n\n  if (table.rows.length <= minLength) {\n    removeRow.setAttribute('disabled', 'true');\n  }\n\n  addRow.removeAttribute('disabled');\n});\n\naddColumn.addEventListener('click', (e) => {\n  const rowArray = [...table.rows];\n  const cellCount = table.rows[0].cells.length;\n\n  for (const row of rowArray) {\n    row.children[cellCount - 1].after(row.children[0].cloneNode(true));\n  }\n\n  if (table.rows[0].cells.length >= maxLength) {\n    addColumn.setAttribute('disabled', 'true');\n  }\n\n  removeColumn.removeAttribute('disabled');\n});\n\nremoveColumn.addEventListener('click', (e) => {\n  const rowArray = [...table.rows];\n  const cellCount = table.rows[0].cells.length;\n\n  for (const row of rowArray) {\n    row.children[cellCount - 1].remove();\n  }\n\n  if (table.rows[0].cells.length <= minLength) {\n    removeColumn.setAttribute('disabled', 'true');\n  }\n\n  addColumn.removeAttribute('disabled');\n});\n"]}